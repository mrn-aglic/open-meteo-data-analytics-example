services:
  redis:
    image: 'redis:alpine'
    container_name: celery-data-validation-redis
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    volumes:
      - ./redis_data:/data
    ports:
      - '6379:6379'

  worker:
    image: celery-data-validation
    volumes:
      - .:/app
    depends_on:
      - redis
      - scheduler
    env_file:
      - .env
    entrypoint: [ './entrypoint.sh', 'worker', 'default' ]


  scheduler:
    build: .
    image: celery-data-validation
    container_name: celery-data-validation-scheduler
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - instance=scheduler
    env_file:
      - .env
    entrypoint: ['./entrypoint.sh', 'scheduler']

  db:
    image: clickhouse/clickhouse-server
    container_name: celery-data-db
    volumes:
      - ./db-data:/var/lib/clickhouse
      - ./ch_init:/docker-entrypoint-initdb.d
    env_file:
      - .env
    ports:
      - "8123:8123"

  metadata:
    image: postgres:17
    container_name: celery-data-superset_db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - superset-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  superset-init:
    container_name: superset_init
    build:
      context: superset_service
    image: apache-superset
    command: ["/app/scripts/init.sh"]
    env_file:
      - .env
    depends_on:
      metadata:
        condition: service_started
      db:
        condition: service_started
      redis:
        condition: service_started
    user: "root"
    volumes:
      - ./superset_service/scripts:/app/scripts
      - ./superset_service/superset_config.py:/app/superset_config.py
      - ./superset_service/init_db_connections.py:/app/init_db_connections.py

  superset:
    image: apache-superset
    container_name: celery-data-superset
    command: ["/app/scripts/run_server.sh"]
    env_file:
      - .env
    depends_on:
      superset-init:
        condition: service_completed_successfully
    volumes:
      - ./superset_service/scripts:/app/scripts
      - ./superset_service/superset_config.py:/app/superset_config.py
    ports:
      - "8088:8088"

  flower:
    build:
      context: ./
      dockerfile: flower/Dockerfile
    command: ['./entrypoint.sh', 'flower']
    volumes:
      - ./flower_data:/db
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      worker:
        condition: service_started
    env_file:
      - .env
    ports:
      - '5555:5555'

volumes:
  superset-data:
